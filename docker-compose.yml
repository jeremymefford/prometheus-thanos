version: '3.8'

services:
  postgres:
    image: postgres:16
    environment:
      POSTGRES_USER: grafana
      POSTGRES_PASSWORD: grafana
      POSTGRES_DB: grafana
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U grafana -d grafana -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  grafana:
    image: grafana/grafana:latest
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - GF_DATABASE_TYPE=postgres
      - GF_DATABASE_HOST=postgres:5432
      - GF_DATABASE_NAME=grafana
      - GF_DATABASE_USER=grafana
      - GF_DATABASE_PASSWORD=grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9091:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  # Thanos Sidecar for First Prometheus (adds 'replica' label)
  thanos-sidecar:
    image: quay.io/thanos/thanos:v0.36.1
    user: root
    depends_on:
      prometheus:
        condition: service_started
      minio:
        condition: service_healthy
    command:
      - sidecar
      - --tsdb.path=/prometheus
      - --prometheus.url=http://prometheus:9090
      - --objstore.config-file=/etc/thanos/minio-config.yml
    volumes:
      - prometheus_data:/prometheus
      - ./thanos/minio-config.yml:/etc/thanos/minio-config.yml

  # Second Prometheus (scraping Node Exporter, part of HA setup)
  prometheus-2:
    image: prom/prometheus:latest
    ports:
      - "9092:9090"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.enable-lifecycle'
      - '--storage.tsdb.min-block-duration=2h'
      - '--storage.tsdb.max-block-duration=2h'
    volumes:
      - ./prometheus/prometheus-2.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_2:/prometheus

  thanos-compactor:
    image: quay.io/thanos/thanos:v0.36.1
    user: root
    command:
      - compact
      - --objstore.config-file=/etc/thanos/minio-config.yml
      - --retention.resolution-raw=0d           # Keep raw data indefinitely
      - --retention.resolution-5m=30d           # Keep 5m downsampled data for 30 days
      - --retention.resolution-1h=90d           # Keep 1h downsampled data for 90 days
    volumes:
      - thanos_store_data:/data
      - ./thanos/minio-config.yml:/etc/thanos/minio-config.yml
    depends_on:
      minio:
        condition: service_healthy
    restart: "no"   
  
  # Thanos Sidecar for Second Prometheus (adds 'replica' label)
  thanos-sidecar-2:
    image: quay.io/thanos/thanos:v0.36.1
    user: root
    depends_on:
      prometheus-2:
        condition: service_started
      minio:
        condition: service_healthy
    command:
      - sidecar
      - --tsdb.path=/prometheus
      - --prometheus.url=http://prometheus-2:9090
      - --objstore.config-file=/etc/thanos/minio-config.yml
    volumes:
      - prometheus_data_2:/prometheus
      - ./thanos/minio-config.yml:/etc/thanos/minio-config.yml

  # Thanos Store Gateway with volume for data storage
  thanos-store:
    image: quay.io/thanos/thanos:v0.36.1
    user: root  # Ensure we run as root to avoid permission issues
    command:
      - store
      - --objstore.config-file=/etc/thanos/minio-config.yml
      - --grpc-address=0.0.0.0:10903  # gRPC address for Thanos Query
    volumes:
      - thanos_store_data:/data  # Add volume to store data
      - ./thanos/minio-config.yml:/etc/thanos/minio-config.yml
    ports:
      - "10903:10903"  # Store Gateway gRPC port to talk to Thanos Query
    depends_on:
      minio:
        condition: service_healthy

  thanos-query:
    image: quay.io/thanos/thanos:v0.36.1
    depends_on:
      - thanos-store
    ports:
      - "10902:10902"
    command:
      - query
      - --http-address=0.0.0.0:10902
      - --store=thanos-store:10903  
      - --store=thanos-sidecar:10901  
      - --store=thanos-sidecar-2:10901 
      - --query.auto-downsampling
      - --query.replica-label=replica

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: thanosaccess
      MINIO_SECRET_KEY: thanossecret
      MINIO_BROWSER_REDIRECT_PORT: 9001
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9000/minio/health/live || exit 1"]
      interval: 3s
      timeout: 5s
      retries: 5

  minio-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 2;
      /usr/bin/mc alias set myminio http://minio:9000 thanosaccess thanossecret;
      /usr/bin/mc mb myminio/thanos;
      exit 0;
      "

  node-exporter:
    image: prom/node-exporter:latest
    ports:
      - "9100:9100"

volumes:
  grafana_data:
  prometheus_data:
  prometheus_data_2:
  minio_data:
  postgres_data:
  thanos_store_data:  